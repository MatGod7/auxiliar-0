Comandos git para archivos:

git init                            -- comando que inicializa un repositorio en una carpeta, debes estar en la carpeta para inicializar
git status                          -- comando que revisa el estado de un repositorio en una carpeta
git add .                           -- comando que adhiere todos los archivos de la carpeta al repositorio git
git commit -m "Mensaje descriptivo del nuevo archivo"     -- comando que agrega de forma definitiva los archivos que adherimos al repositorio git
git clone link_del_repositorio.git  -- comando que dado un link de repositorio de GitHub, agrega ese repositorio al pc

********USAR PUSH Y PULL UNA VEZ USADOS ADD . Y COMMIT**********

git pull origin nombre_rama         -- comando que guarda los cambios en una rama de GitHub en nuestro pc
                                       master es la rama maestra (solo guardar codigos que funcionan ahí)
git push origin nombre_rama         -- comando que guarda los cambios en una rama de nuestro pc en GitHub

git branch rama-1                   -- comando que crea una rama (rama1), ideal para trabajar en equipo (cada uno en su rama)
git checkout rama-1                 -- comando que permite entrar a la rama-1 (creada anteriormente, por defecto uno se encuentra en la rama master)

******HACER GIT MERGE MASTER EN RAMA  PRIMERO Y LUEGO GIT MERGE RAMA EN MASTER*****
 
 git merge rama-1                   -- comando que permite traspasar archivos de una rama a otra (es necesario estar en master si se quiere hacer git merge rama-1)
                                       estando en rama-1 debería usarse git megre master


Pasos para crear un repositorio en GitHub y clonarlo en el pc

- seleccionar nuevo repositorio en GitHub 

- seleccionar SSH o HTPS (para el primero es necesario setear una llave) y crearlo (puede ser privado o publico)

- se entregará un link al crearlo, copiar ese link

- en la terminal de git, ir a la carpeta donde lo quieres tener y escribir:
git clone link_del_repositorio.git 

- poner en esta carpeta creada los archivos que deseas guardar (ponerlo con los comandos extra y hacerle 'add' y 'commit') y luego escribir:
git push origin master          (esto sube el archivo a GitHub)(funciona solo si no existe el archivo en GitHub)

- si queremos editar en GitHub el archivo y lo queremos actualizar en el pc se debe escribir en el archivo donde se encuentre el git:
git pull origin master          (es EXTREMADAMENTE IMPORTANTE hacer pull antes que push)

*Esto se debe a que git no va a saber si mantener o no el archivo en la web, al hacer 'git pull origin master' y luego 'git push origin master' 
primero estamos actualizando lo que hay en la web y luego estamos reescribiendo lo que nosotros escribimos.*


Comandos extra:
ls                                              -- comando que muestra los contenidos que tiene la carpeta en la que estamos
cp archivo_existente.algo archivo_nuevo.algo    -- comando que copia el contenido de un archivo existente 
                                                   y crea un archivo nuevo con el mismo contenido del primer archivo en la misma carpeta
cd ..                                           -- comando que te devuelve a la carpeta que almacena el lugar donde estas
                                                   ejemplo: carpeta_A/carpeta_B -> cd .. -> carpeta_A
mv carpeta_A/archivo_A.algo carpeta_B           -- comando que mueve un archivo A de una carpeta A a una carpeta B,
                                                   para usarlo se debe estar en una carpeta que contenga las carpetas A y 
cat archivo.algo                                -- comando que muestra el contenido de un archivo
